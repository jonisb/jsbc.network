# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [2.7, 3.8]
        architecture: ['x64', 'x86']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v1
      with:
        path: ~\AppData\Local\pip\Cache # This path is specific to Windows
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.architecture }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ matrix.architecture }}-
          ${{ runner.os }}-pip-
          ${{ runner.os }}-      
    - name: Install dependencies
      run: |
        python -m pip install --no-python-version-warning --upgrade pip
        pip install --no-python-version-warning -r requirements.txt
        pip install git+https://github.com/jonisb/jsbc.compat.git#egg=jsbc.compat
        pip install git+https://github.com/jonisb/jsbc.Toolbox.git#egg=jsbc.Toolbox
        pip install --upgrade .\
    - name: Lint with flake8
      run: |
        pip install --no-python-version-warning flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install --no-python-version-warning pytest
        python -m pytest
